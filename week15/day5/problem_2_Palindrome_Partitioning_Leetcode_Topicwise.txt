class Solution {
public:
    bool isPalindrome(string s,int l,int r){
        while(l<=r){
            if(s[l]!=s[r]) return false;
            l++;
            r--;
        }
        return true;
    }
    void rec(int idx,vector<vector<string>>& ans,vector<string>& v,string s,int n){
        if(idx==n){     //base case
            ans.push_back(v);   //current full v ta ans e push kore dibo & return 
            return;
        }
        for(int i=idx;i<n;i++){
            if(isPalindrome(s,idx,i)){
                v.push_back(s.substr(idx,i-idx+1));     //starting index & range
                rec(i+1, ans, v, s, n);        //next index er jonno recursion check
                v.pop_back();              //recursion complete er por pop kore dibo
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;     //answer shob ekhane save korbo
        
        //recursion running time e ei vector diyei amra full push-pop er kaj korbo
        vector<string> v;

        int n=s.size();
        rec(0, ans, v, s, n);
        return ans;
    }
};