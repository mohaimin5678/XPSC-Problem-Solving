class Solution {
public:
    int sum(vector<int>& v){
        int s=0;
        for(int i=0;i<v.size();i++) s+=v[i];
        return s;
    } 
    void rec(vector<vector<int>>& ans,vector<int>& v,vector<int>& candidates,int target,int idx){
        if(sum(v)>target) return;
        if(sum(v)==target){
            ans.push_back(v);
            return;
        }
        for(int i=idx;i<candidates.size();i++){
            if(i>idx && candidates[i]==candidates[i-1]) continue;
            v.push_back(candidates[i]);
            rec(ans,v,candidates,target,i+1);
            v.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> v;
        sort(candidates.begin(),candidates.end());
        rec(ans,v,candidates,target,0);
        return ans;
    }
};
/*
problem 4: Combination Sum
ekhane repeatedly same value select kora jabe tai recursion e i tai pathay dicche jate repeatedly
value ta nite pare. since sort kore candidates pathacchi so duplicate subset howar possibility 
nai (also values are distinct). 
target er beshi hoye gele save na korei return & target er equal hoile ans e save kore return. 

problem 5: Combination Sum II
ekhane repeatedly same value select kora jabe na tai recursion e i+1 pathay dicchi jate next value ta nite pare. Jodio sort kore candidates pathacchi but still values same thakte pare tai 
check korbo for loop e condition diye je jodi duplicate value pawa jay tahole sheta ignore kore
next value te jaite. 
target er beshi hoye gele save na korei return & target er equal hoile ans e save kore return. 
*/
